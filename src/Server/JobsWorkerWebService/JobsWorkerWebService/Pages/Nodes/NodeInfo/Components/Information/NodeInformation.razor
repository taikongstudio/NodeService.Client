@inject System.Net.Http.HttpClient HttpClient
@inject NotificationService _notice

<GridContent>

@if (this.Props == null)
{
        <Empty />
}
else
    {
        <GridRow>
            <Space>
                <SpaceItem>
                    <Button Type="@ButtonType.Primary" OnClick="RefreshNodeProps">刷新</Button>
                </SpaceItem>

            </Space>
        </GridRow>
        <GridRow>
            <Collapse DefaultActiveKey="@(new[]{"1"})">
                @{
                    int index = 0;
                    foreach (var item in this.Props)
                    {
                        <Panel Header="@item.Name" Key="@index.ToString()">
                            <p>@item.Value</p>
                        </Panel>
                        index++;
                    }
                }

            </Collapse>
        </GridRow>
}
</GridContent>


@code {
    [Parameter]
    public string? NodeName { get; set; }

    public IEnumerable<NodeProperty> Props { get; set; }


    protected async override Task OnParametersSetAsync()
    {
        try
        {
            var apiResult = await this.HttpClient.GetFromJsonAsync<ApiResult<IEnumerable<NodeProperty>>>($"/api/nodes/{this.NodeName}/props?rdm={Random.Shared.Next()}");
            if (apiResult.ErrorCode == 0)
            {
                this.Props = apiResult.Value;
            }
            else
            {

            }
            this.StateHasChanged();
        }
        catch (Exception ex)
        {

        }

        await base.OnParametersSetAsync();
    }

    private async Task RefreshNodeProps()
    {
        try
        {
            var apiResult = await this.HttpClient.GetFromJsonAsync<ApiResult<IEnumerable<NodeProperty>>>($"/api/nodes/{this.NodeName}/props?rdm={Random.Shared.Next()}");
            if (apiResult.ErrorCode == 0)
            {
                this.Props = apiResult.Value;
            }
            else
            {
                await this._notice.Open(new NotificationConfig()
                    {
                        Message = "加载失败",
                        Description = $"错误代码:{apiResult.ErrorCode},消息:{apiResult.Message}",
                    });
            }
        }
        catch (Exception ex)
        {

        }
    }



}
